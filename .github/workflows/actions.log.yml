name: Log to github-actions.log # The name of the workflow. You can call this whatever you want.
on:
  workflow_dispatch:
    inputs:
      message:
        description: 'message logged to github-actions.log'
        required: true
        type: string
      logLevel:
        description: 'logLevel. 1 = INFO, 2 = WARN, 3 = ERROR'
        default: "1"
        required: true
        type: string
jobs:
  log:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: log based on inputs
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require("fs")
          console.log("fs.existsSync('./actions.log.js')")
          console.log(fs.existsSync("./actions.log.js"))
          if (fs.existsSync("./actions.log.js")) {} else {
            console.log("actions.log.js does not exist (and I'm assuming neither does github-actions.log)\nTherefore, I will now create those files.")
            var content = 'module.exports=function(message,logLevel,source){const fs=require("fs");fs.readFile("github-actions.log",(err, buff)=>{if(err){console.error("[!!! ----- logAction failed ----- !!!]");console.error(err);return;};var content=buff.toString();content+="\\n";content+=new Date();content+=" [";if(logLevel===3){content+="ERROR] <";}else if(logLevel===2){content+="WARN] <";}else if(logLevel===1){content+="INFO] <";}else{content+="INFO] <";console.warn("`logLevel` was either invalid or not provided. Falling back to `1` (INFO).");};if(typeof source!=="undefined"){content+=source;content+="> ";}else{content+="unknown> ";console.warn("`source` was not provided. Falling back to `unknown`.");};content+=message;fs.writeFile("github-actions.log",content,err=>{if(err){console.error("[!!! ----- logAction failed ----- !!!]");console.error(err);};console.log("action logged");});});};'
            fs.writeFileSync("actions.log.js", content)
            var firstMessage = ""
            firstMessage += new Date()
            firstMessage += " [INFO] <CONSOLE> Logfile created.\n========================================================================================="
            fs.writeFileSync("github-actions.log", firstMessage)
            core.notice("Created actions.log.js and github-actions.log")
          }
          var logAction = require("./actions.log.js")
          logAction("${{ github.event.inputs.message }}", ${{ github.event.inputs.logLevel }}, "CONSOLE")
          core.notice("${{ github.event.inputs.message }}")
    - name: push changes
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "logged message init by actions.log.yml"
        git push